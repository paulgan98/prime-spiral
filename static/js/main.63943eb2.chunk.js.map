{"version":3,"sources":["components/canvas.js","spiralMethods.js","components/controlPanel.js","App.js","index.js"],"names":["STEPSIZE","STEPSCALE","CIRCLESIZE","Canvas","props","canvasRef","useRef","canvas","_ref","windowDims","Width","Height","scale","window","devicePixelRatio","_useState","useState","_useState2","Object","slicedToArray","isMouseDown","setMouseDown","_useState3","x","y","_useState4","mousePos","setMousePos","_useState5","_useState6","transformedMousePos","setTransformedMousePos","_useState7","_useState8","selectedNumber","setSelectedNumber","_useState9","_useState10","scaleFactor","setScaleFactor","_useState11","_useState12","transform","setTransform","handleMouseDown","e","handleMouseUp","handleMouseMove","rect","getBoundingClientRect","clientX","left","clientY","top","updateMousePositions","preventDefault","xDiff","yDiff","temp","toConsumableArray","handlePan","handleZoom","s","deltaY","Math","min","max","handleMouseLeave","draw","ctx","clearRect","width","height","apply","showSpiral","n","arr","curr","next","i","length","p1","p2","j","diffVec","drawLine","drawSpiral","spiralLength","spiralCorners","selected","coord","isInCircle","drawCircle","toString","color","crazyMode","colors","drawPrimes","nPrimes","primesPos","font","concat","fillStyle","fillText","showSelectedNumber","useEffect","context","w","h","cv","current","style","getContext","createHiPPICanvas","centerCanvasBool","setCenterCanvasBool","centerCanvas","addEventListener","removeEventListener","react_default","a","createElement","ref","className","size","beginPath","arc","PI","fill","strokeStyle","lineWidth","lineCap","moveTo","lineTo","stroke","p","circle","r","pow","getPrimes","start","isPrime","push","numPrimes","primes","ptr","buildSpiral","dataArray","axisAndDir","_dataArray","adPtr","steps","counter","axis","delta","makePrimesArr","interval","abs","ControlPanel","updateSpiralImage","setSpiralLength","setSpiralCorners","spiral","dataArr","setNPrimes","setPrimes","setPrimesPos","checkValidInput","MAXLENGTH","onClick","id","type","value","defaultValue","onInput","inp","document","getElementById","v","parseInt","elem","innerHTML","setShowSpiral","setCrazyMode","setColors","generateRandomColors","SPIRALLENGTH","App","_useState13","innerWidth","innerHeight","_useState14","setWindowDims","_useState15","_useState16","_useState17","_useState18","_useState19","_useState20","colorsArray","randomColor","floor","random","_useState21","_useState22","handleResize","components_canvas","controlPanel","ReactDOM","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.63943eb2.chunk.js","sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\nimport \"../App.css\";\n\nvar STEPSIZE = 15; // distance between current and next point\nvar STEPSCALE = 3; // scalar for STEPSIZE\nvar CIRCLESIZE = (STEPSIZE * STEPSCALE) / 5;\n\nfunction Canvas(props) {\n  // canvas variables\n  const canvasRef = useRef(null);\n  var canvas = null;\n  var [Width, Height] = [props.windowDims.Width, props.windowDims.Height];\n  const scale = window.devicePixelRatio || 1;\n\n  // state hooks\n  const [isMouseDown, setMouseDown] = useState(0);\n  const [mousePos, setMousePos] = useState({ x: 0, y: 0 });\n  const [transformedMousePos, setTransformedMousePos] = useState([0, 0]);\n  const [selectedNumber, setSelectedNumber] = useState(\"\");\n  const [scaleFactor, setScaleFactor] = useState(1); // how much to scale canvas by\n  const [transform, setTransform] = useState([\n    1,\n    0,\n    0,\n    1,\n    (props.windowDims.Width * scale) / 2,\n    (props.windowDims.Height * scale) / 2,\n  ]);\n\n  // create HD canvas\n  function createHiPPICanvas(w, h) {\n    let cv = canvasRef.current;\n    cv.width = w * scale;\n    cv.height = h * scale;\n    cv.style.width = w + \"px\";\n    cv.style.height = h + \"px\";\n    cv.getContext(\"2d\").scale(scale, scale);\n    return cv;\n  }\n\n  const centerCanvas = () => {\n    const temp = [...transform];\n    temp[4] = (props.windowDims.Width / 2) * scale;\n    temp[5] = (props.windowDims.Height / 2) * scale;\n    setTransform(temp);\n    props.setCenterCanvasBool(false);\n  };\n\n  // updates relative and absolute mouse positions\n  const updateMousePositions = (e) => {\n    var rect = canvas.getBoundingClientRect();\n    setMousePos({\n      x: (e.clientX - rect.left) * scale,\n      y: (e.clientY - rect.top) * scale,\n    });\n    setTransformedMousePos([\n      (mousePos.x - transform[4]) / transform[0],\n      (mousePos.y - transform[5]) / transform[3],\n    ]);\n  };\n\n  const handleMouseDown = (e) => {\n    setMouseDown(1);\n  };\n\n  const handleMouseUp = (e) => {\n    setMouseDown(0);\n  };\n\n  // handles panning\n  const handlePan = (e) => {\n    e.preventDefault();\n    // calculate how much mouse moved\n    var rect = canvas.getBoundingClientRect();\n    const xDiff = (e.clientX - rect.left) * scale - mousePos.x;\n    const yDiff = (e.clientY - rect.top) * scale - mousePos.y;\n\n    const temp = [...transform];\n    temp[4] = temp[4] + xDiff;\n    temp[5] = temp[5] + yDiff;\n\n    setTransform(temp);\n  };\n\n  // sets mouse position\n  const handleMouseMove = (e) => {\n    updateMousePositions(e);\n    if (isMouseDown) {\n      handlePan(e);\n    }\n  };\n\n  const handleZoom = (e) => {\n    e.preventDefault();\n    const zoomSpeed = 0.002;\n    var s = scaleFactor + e.deltaY * -zoomSpeed;\n    s = Math.min(Math.max(0.05, s), 7);\n    if (scaleFactor !== s) {\n      const temp = transform;\n      temp[0] = s;\n      temp[3] = s;\n      temp[4] = mousePos.x - (mousePos.x - transform[4]) * (s / scaleFactor);\n      temp[5] = mousePos.y - (mousePos.y - transform[5]) * (s / scaleFactor);\n      setScaleFactor(s);\n      setTransform(temp);\n    }\n  };\n\n  const handleMouseLeave = (e) => {\n    var rect = canvas.getBoundingClientRect();\n    if (\n      e.clientX <= rect.left ||\n      e.clientY <= rect.top ||\n      e.clientX >= Width ||\n      e.clientY >= Height\n    ) {\n      setMouseDown(0);\n    }\n  };\n\n  // draw all circles based on arr\n  const drawPrimes = (n, arr, ctx) => {\n    var selected = false;\n    for (let i = 0; i < n; i++) {\n      let coord = [...arr[i]];\n      for (let j = 0; j < 2; j++) {\n        coord[j] *= STEPSIZE * STEPSCALE;\n      }\n\n      // mouse is in circle\n      if (isInCircle(transformedMousePos, coord, CIRCLESIZE + 2) && !selected) {\n        drawCircle(coord[0], coord[1], CIRCLESIZE * 1.5, \"red\", ctx);\n        selected = true;\n        setSelectedNumber(coord[2].toString());\n      } else {\n        let color = props.crazyMode ? props.colors[i] : \"black\";\n        drawCircle(coord[0], coord[1], CIRCLESIZE, color, ctx);\n      }\n    }\n    if (!selected) {\n      setSelectedNumber(\"\");\n    }\n  };\n\n  // show selected number\n  const showSelectedNumber = (ctx) => {\n    ctx.font = `${(20 / transform[0]) * scale}px Arial`;\n    ctx.fillStyle = \"#03C04A\";\n    ctx.fillText(\n      selectedNumber,\n      transformedMousePos[0] + 10,\n      transformedMousePos[1] - 10\n    );\n  };\n\n  // draw on canvas\n  const draw = (ctx) => {\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    ctx.setTransform(...transform);\n\n    if (props.showSpiral) {\n      drawSpiral(props.spiralLength, props.spiralCorners, ctx); // draw spiral lines\n    }\n    drawPrimes(props.nPrimes, props.primesPos, ctx); // draw circles\n    showSelectedNumber(ctx);\n  };\n\n  useEffect(() => {\n    canvas = createHiPPICanvas(props.windowDims.Width, props.windowDims.Height);\n    const context = canvas.getContext(\"2d\");\n    draw(context); // draw on canvas\n\n    if (props.centerCanvasBool === true) {\n      centerCanvas();\n    }\n\n    canvas.addEventListener(\"mousedown\", handleMouseDown);\n    canvas.addEventListener(\"touchstart\", handleMouseDown);\n    canvas.addEventListener(\"mouseup\", handleMouseUp);\n    canvas.addEventListener(\"touchend\", handleMouseUp);\n    canvas.addEventListener(\"mousemove\", handleMouseMove);\n    canvas.addEventListener(\"touchmove\", handleMouseMove);\n    canvas.addEventListener(\"wheel\", handleZoom);\n    canvas.addEventListener(\"mouseleave\", handleMouseLeave);\n\n    return () => {\n      canvas.removeEventListener(\"mousedown\", handleMouseDown);\n      canvas.removeEventListener(\"touchstart\", handleMouseDown);\n      canvas.removeEventListener(\"mouseup\", handleMouseUp);\n      canvas.removeEventListener(\"touchend\", handleMouseUp);\n      canvas.removeEventListener(\"mousemove\", handleMouseMove);\n      canvas.removeEventListener(\"touchmove\", handleMouseMove);\n      canvas.removeEventListener(\"wheel\", handleZoom);\n      canvas.removeEventListener(\"mouseleave\", handleMouseLeave);\n    };\n  }, [\n    isMouseDown,\n    props.spiralLength,\n    props.windowDims,\n    props.centerCanvasBool,\n    props.showSpiral,\n    props.crazyMode,\n    scaleFactor,\n    transform,\n    mousePos,\n    selectedNumber,\n  ]);\n  return (\n    <div>\n      <canvas ref={canvasRef} className=\"Canvas\" />\n      {/* <div>\n        {toPrint[0]}/{toPrint[1]}/{toPrint[2]}/{toPrint[3]}\n      </div>\n      <div>\n        {transformedMousePos[0]}/{transformedMousePos[1]}\n      </div> */}\n    </div>\n  );\n}\n\nexport default Canvas;\n\n// draw function declarations\n\n// draw circle at (x, y)\nfunction drawCircle(x, y, size, color, ctx) {\n  ctx.beginPath();\n  ctx.arc(x, y, size, 0, 2 * Math.PI);\n  ctx.fillStyle = color;\n  ctx.fill();\n}\n\n// draw line between point 1 and point 2\nfunction drawLine(p1, p2, ctx) {\n  ctx.strokeStyle = \"#D0D0D0\"; // grey\n  ctx.lineWidth = Math.max(1, (STEPSIZE * STEPSCALE) / 12);\n  ctx.lineCap = \"round\";\n  ctx.beginPath();\n  ctx.moveTo(p1[0], p1[1]);\n  ctx.lineTo(p2[0], p2[1]);\n  ctx.stroke();\n}\n\n// draw spiral lines from array of corner coords [x, y]\nfunction drawSpiral(n, arr, ctx) {\n  var curr = arr[0];\n  var next = null;\n  for (let i = 1; i < arr.length; i++) {\n    next = arr[i];\n    let p1 = [...curr];\n    let p2 = [...next];\n    for (let j = 0; j < 2; j++) {\n      p1[j] *= STEPSIZE * STEPSCALE;\n      p2[j] *= STEPSIZE * STEPSCALE;\n    }\n    // if next corner point is longer than what we need\n    if (next[2] > n) {\n      let s = (n - curr[2]) / (next[2] - curr[2]);\n      let diffVec = [(p2[0] - p1[0]) * s, (p2[1] - p1[1]) * s];\n      drawLine(p1, [p1[0] + diffVec[0], p1[1] + diffVec[1]], ctx);\n      break;\n    } else {\n      drawLine(p1, p2, ctx);\n      curr = next;\n    }\n  }\n}\n\nfunction isInCircle(p, circle, r) {\n  // (x-h)^2 + (y-k)^2 ≤ r^2\n  if (\n    Math.pow(p[0] - circle[0], 2) + Math.pow(p[1] - circle[1], 2) <=\n    Math.pow(r, 2)\n  ) {\n    return true;\n  } else {\n    return false;\n  }\n}\n","// Contains all functions used to build spiral and prime numbers\n\n// return all prime numbers until n\n// based on arr: current known prime numbers\nexport function getPrimes(n, arr) {\n  // already calculated, return current array of prime numbers\n  if (n <= arr[arr.length - 1]) {\n    return arr;\n  }\n  // else build from last unbuilt prime number\n  var start = Math.max(3, arr[arr.length - 1] + 1);\n  start = start % 2 === 0 ? start + 1 : start; // if start number is even, set to next odd number\n  for (let i = start; i <= n; i += 2) {\n    let isPrime = 1;\n    for (let j = 0; j < arr.length; j++) {\n      if (i % arr[j] === 0) {\n        isPrime = 0;\n        break;\n      }\n    }\n    if (isPrime) {\n      arr.push(i);\n    }\n  }\n  return arr;\n}\n\n// return number of prime numbers until n\nexport function numPrimes(n, primes) {\n  if (n > primes[primes.length - 1]) {\n    primes = getPrimes(n, primes);\n  }\n  var ptr = 0;\n  while (primes[ptr] <= n) {\n    ptr++;\n  }\n  return ptr;\n}\n\n// arr: spiral corners array [x_rel, y_rel, number]\n// dataArr: [adPtr, steps, counter, i]\n// build array of RELATIVE POSITIONS of all corner coords in spiral\nexport function buildSpiral(n, arr, dataArray) {\n  // if arr already built\n  if (n <= dataArray[3] - 1) {\n    return arr;\n  }\n\n  // else build array\n  // initialize spiral variables\n  const axisAndDir = [\n    [0, 1],\n    [1, -1],\n    [0, -1],\n    [1, 1],\n  ]; // Dir=1 right/down, Dir=-1 left/up\n\n  // adPtr: ptr for axisAndDir 0-3\n  // steps: how many steps to take; increases every 2 direction changes\n  // counter: each value of 'steps' occurs twice, then direction change\n  // i: current number being built\n  var [adPtr, steps, counter, i] = dataArray;\n\n  while (i <= n) {\n    var axis = axisAndDir[adPtr][0];\n    var delta = axisAndDir[adPtr][1];\n    let temp = [...arr[arr.length - 1]]; // temp is last element of arr\n    temp[axis] += steps * delta;\n    temp[2] += steps;\n    arr.push(temp);\n\n    // update variables\n    counter--;\n    i += steps;\n    if (counter === 0) {\n      counter = 2;\n      steps++;\n    }\n    adPtr++;\n    adPtr = adPtr > 3 ? 0 : adPtr; // if out of bounds, point back to first\n  }\n  // update dataArray\n  var temp = [adPtr, steps, counter, i];\n  for (let j = 0; j < dataArray.length; j++) {\n    dataArray[j] = temp[j];\n  }\n  return arr;\n}\n\n// make array of relative coords of all prime numbers\nexport function makePrimesArr(n, spiralCorners, primes) {\n  // if array already built, return it\n  // if ()\n\n  const arr = []; // return this\n  var ptr = 0; // pointer for primes array\n  // loop through corner coordinates of spiral [x_rel, y_rel, number]\n  for (let i = 1; i < spiralCorners.length; i++) {\n    let p1 = [...spiralCorners[i - 1]]; // p1 = current element\n    let p2 = [...spiralCorners[i]]; // p2 = next element\n    var interval = p2[2] - p1[2];\n    while (primes[ptr] > p1[2] && primes[ptr] <= p2[2]) {\n      let temp = [...p1];\n      let delta = (primes[ptr] - p1[2]) / interval;\n      let diffVec = [(p2[0] - p1[0]) * delta, (p2[1] - p1[1]) * delta];\n      temp[0] += diffVec[0];\n      temp[1] += diffVec[1];\n      temp[2] += Math.abs(diffVec[0]) + Math.abs(diffVec[1]); // add distance to get the new prime number\n      arr.push(temp);\n      ptr++;\n    }\n  }\n  return arr;\n}\n","import React from \"react\";\nimport * as spiral from \"../spiralMethods\";\nimport { MAXLENGTH } from \"../App\";\n\n// var toPrint = [];\n\n// const Print = () => {\n//   var a = [];\n//   for (let i = 0; i < toPrint.length; i++) {\n//     a.push(\"/\");\n//     a.push(toPrint[i]);\n//   }\n//   return a;\n// };\n\n// Controls component for modifying Canvas\nfunction ControlPanel(props) {\n  // update function to be called only when spiral length changes\n  const updateSpiralImage = (n) => {\n    props.setSpiralLength(n);\n    props.setSpiralCorners(\n      spiral.buildSpiral(n, props.spiralCorners, props.dataArr)\n    );\n    props.setNPrimes(spiral.numPrimes(n, props.primes));\n    props.setPrimes(spiral.getPrimes(n, props.primes));\n    props.setPrimesPos(\n      spiral.makePrimesArr(n, props.spiralCorners, props.primes)\n    ); // primesPos is array of all circle coordinates used by drawPrimes\n  };\n\n  const handleSpiralLengthInput = () => {\n    var inp = document.getElementById(\"Spiral-length-input\");\n    let v = parseInt(inp.value) || 1;\n    v = checkValidInput(v);\n    updateSpiralImage(v);\n  };\n\n  const checkValidInput = (n) => {\n    return Math.min(Math.max(1, n), MAXLENGTH);\n  };\n\n  const centerCanvas = () => props.setCenterCanvasBool(true);\n\n  const toggleShowSpiral = () => {\n    var elem = document.getElementById(\"Show-spiral-button\");\n    if (props.showSpiral) {\n      elem.innerHTML = \"Show Spiral\";\n      props.setShowSpiral(false);\n    } else {\n      elem.innerHTML = \"Hide Spiral\";\n      props.setShowSpiral(true);\n    }\n  };\n\n  const toggleCrazyMode = () => {\n    const elem = document.getElementById(\"Crazy-mode-button\");\n    if (props.crazyMode) {\n      elem.innerHTML = \"Crazy Mode\";\n      props.setCrazyMode(false);\n    } else {\n      elem.innerHTML = \"Normal Mode\";\n      props.setCrazyMode(true);\n      props.setColors(props.generateRandomColors(MAXLENGTH));\n    }\n  };\n\n  return (\n    <div className=\"Controls-div\">\n      <button\n        className=\"Button-short\"\n        onClick={() => {\n          updateSpiralImage(checkValidInput(props.spiralLength - 1));\n        }}\n      >\n        ▼\n      </button>\n      <input\n        className=\"Spiral-length-input\"\n        id=\"Spiral-length-input\"\n        type=\"quantity\"\n        value={props.spiralLength}\n        defaultValue=\"1\"\n        onInput={handleSpiralLengthInput}\n      ></input>\n      <button\n        className=\"Button-short\"\n        onClick={() => {\n          updateSpiralImage(checkValidInput(props.spiralLength + 1));\n        }}\n      >\n        ▲\n      </button>\n      <button\n        className=\"Button-max\"\n        onClick={() => {\n          updateSpiralImage(MAXLENGTH);\n        }}\n      >\n        Max\n      </button>\n      <button className=\"Button-long\" onClick={centerCanvas}>\n        Center\n      </button>\n      <div className=\"Controls-div\">\n        <button\n          className=\"Button-longer\"\n          id=\"Show-spiral-button\"\n          onClick={toggleShowSpiral}\n        >\n          Hide Spiral\n        </button>\n        <button\n          id=\"Crazy-mode-button\"\n          className=\"Button-longer\"\n          onClick={toggleCrazyMode}\n        >\n          Crazy Mode\n        </button>\n      </div>\n    </div>\n  );\n}\nexport default ControlPanel;\n","import React, { useEffect, useState } from \"react\";\nimport Canvas from \"./components/canvas.js\";\nimport ControlPanel from \"./components/controlPanel\";\nimport * as spiral from \"./spiralMethods\";\nimport \"./App.css\";\n\n//              App\n//            /     \\\n//  ControlPanel     Canvas\n\nvar SPIRALLENGTH = 2000;\nexport const MAXLENGTH = 1000000;\n\nfunction App() {\n  // State hooks; will be passed as props to ControlPanel and Canvas\n\n  // [adPtr, steps, counter, i]\n  const [dataArr] = useState([0, 1, 2, 2]);\n  const [spiralLength, setSpiralLength] = useState(SPIRALLENGTH);\n  // primes: array of all prime numbers until max spiral length\n  const [primes, setPrimes] = useState(spiral.getPrimes(SPIRALLENGTH, [2]));\n  const [spiralCorners, setSpiralCorners] = useState(\n    spiral.buildSpiral(SPIRALLENGTH, [[0, 0, 1]], dataArr)\n  );\n  const [primesPos, setPrimesPos] = useState(\n    spiral.makePrimesArr(SPIRALLENGTH, spiralCorners, primes)\n  );\n  const [nPrimes, setNPrimes] = useState(\n    spiral.numPrimes(SPIRALLENGTH, primes)\n  );\n  // canvas dimensions\n  const [windowDims, setWindowDims] = useState({\n    Width: window.innerWidth - 60,\n    Height: window.innerHeight - 160,\n  });\n  const [centerCanvasBool, setCenterCanvasBool] = useState(false);\n  const [showSpiral, setShowSpiral] = useState(true);\n  const [crazyMode, setCrazyMode] = useState(false);\n\n  // build a list of n random colors in hex format\n  const generateRandomColors = (n) => {\n    var colorsArray = [];\n    const letters = \"0123456789ABCDEF\";\n    for (let i = 0; i < n; i++) {\n      var randomColor = \"#\";\n      for (let j = 0; j < 6; j++) {\n        randomColor += letters[Math.floor(Math.random() * 16)];\n      }\n      colorsArray.push(randomColor);\n    }\n    return colorsArray;\n  };\n  const [colors, setColors] = useState(generateRandomColors(MAXLENGTH));\n\n  // Methods\n  const handleResize = () => {\n    setWindowDims({\n      Width: window.innerWidth - 60,\n      Height: window.innerHeight - 160,\n    });\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", handleResize);\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  }, []);\n\n  return (\n    <div className=\"Div1\">\n      <h1 className=\"Title\">The Prime Spiral</h1>\n      <p className=\"By-text\"> A React app by Paul Gan</p>\n      <Canvas\n        className=\"Canvas\"\n        spiralLength={spiralLength}\n        primesPos={primesPos}\n        nPrimes={nPrimes}\n        spiralCorners={spiralCorners}\n        windowDims={windowDims}\n        centerCanvasBool={centerCanvasBool}\n        setCenterCanvasBool={setCenterCanvasBool}\n        showSpiral={showSpiral}\n        crazyMode={crazyMode}\n        colors={colors}\n      />\n      <ControlPanel\n        spiralLength={spiralLength}\n        primesPos={primesPos}\n        nPrimes={nPrimes}\n        spiralCorners={spiralCorners}\n        primes={primes}\n        dataArr={dataArr}\n        setSpiralLength={setSpiralLength}\n        setPrimesPos={setPrimesPos}\n        setNPrimes={setNPrimes}\n        setSpiralCorners={setSpiralCorners}\n        setPrimes={setPrimes}\n        windowDims={windowDims}\n        setCenterCanvasBool={setCenterCanvasBool}\n        showSpiral={showSpiral}\n        setShowSpiral={setShowSpiral}\n        crazyMode={crazyMode}\n        setCrazyMode={setCrazyMode}\n        setColors={setColors}\n        generateRandomColors={generateRandomColors}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}